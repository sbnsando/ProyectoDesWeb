Index: src/main/java/edu/javeriana/users/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.javeriana.users.service;\r\n\r\nimport edu.javeriana.users.entity.User;\r\nimport edu.javeriana.users.repository.UserRepository;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.transaction.annotation.Transactional;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n@Service\r\n@Transactional\r\npublic class UserService {\r\n\r\n    @Autowired\r\n    UserRepository userRepository;\r\n\r\n    public List<User> list(){\r\n        List<User> users = new ArrayList<>();\r\n        userRepository.findAll().forEach(users::add);\r\n        return users;\r\n\r\n    }\r\n\r\n    public User getOneById(int id) {\r\n\r\n        User user = null;\r\n        user = userRepository.findById(id).get();\r\n\r\n        return user;\r\n    }\r\n\r\n    public User getOneByIdentityNumb(int identityNumb){\r\n        User user = null;\r\n        user = userRepository.findByIdentityNumb(identityNumb);\r\n\r\n        return user;\r\n    }\r\n\r\n    public boolean findByIdentityNumb(int identityNumb){\r\n        User user = null;\r\n        user = userRepository.findByIdentityNumb(identityNumb);\r\n\r\n        return user==null ? false : true;\r\n    }\r\n\r\n    public User getOneByName(String name) {\r\n\r\n        User user = null;\r\n        user = userRepository.findByName(name);\r\n\r\n        return user;\r\n    }\r\n    public void save(User User){\r\n\r\n        userRepository.save(User);\r\n    }\r\n\r\n    public void delete(int id){\r\n\r\n        userRepository.deleteById(id);\r\n    }\r\n\r\n    public boolean existById(int id){\r\n\r\n        return userRepository.existsById(id);\r\n    }\r\n\r\n    public boolean existByName(String name){\r\n\r\n        return userRepository.findByName(name) == null ? false : true;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/edu/javeriana/users/service/UserService.java b/src/main/java/edu/javeriana/users/service/UserService.java
--- a/src/main/java/edu/javeriana/users/service/UserService.java	(revision e1b9a35223319bbb860092d4f4774e6413158412)
+++ b/src/main/java/edu/javeriana/users/service/UserService.java	(date 1681854080175)
@@ -31,16 +31,16 @@
         return user;
     }
 
-    public User getOneByIdentityNumb(int identityNumb){
+    public User getOneByEmail(String email){
         User user = null;
-        user = userRepository.findByIdentityNumb(identityNumb);
+        user = userRepository.findByEmail(email);
 
         return user;
     }
 
-    public boolean findByIdentityNumb(int identityNumb){
+    public boolean findByEmail(String email){
         User user = null;
-        user = userRepository.findByIdentityNumb(identityNumb);
+        user = userRepository.findByEmail(email);
 
         return user==null ? false : true;
     }
@@ -57,11 +57,6 @@
         userRepository.save(User);
     }
 
-    public void delete(int id){
-
-        userRepository.deleteById(id);
-    }
-
     public boolean existById(int id){
 
         return userRepository.existsById(id);
Index: src/main/java/edu/javeriana/users/controller/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.javeriana.users.controller;\r\n\r\nimport edu.javeriana.users.dto.Message;\r\nimport edu.javeriana.users.dto.UserDto;\r\nimport edu.javeriana.users.entity.User;\r\nimport edu.javeriana.users.service.UserService;\r\nimport io.micrometer.common.util.StringUtils;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/users\")\r\npublic class UserController {\r\n\r\n    @Autowired\r\n    private UserService userService;\r\n\r\n    @GetMapping(\"/\")\r\n    public String hola(){\r\n        return \"Hola\";\r\n    }\r\n\r\n    @GetMapping(\"/list\")\r\n    public ResponseEntity<List<User>> list(){\r\n        List<User> list = userService.list();\r\n        if(list.isEmpty()){\r\n            return new ResponseEntity(new Message(\"No users registered in the system.\"), HttpStatus.OK);\r\n        }\r\n        return new ResponseEntity<>(list, HttpStatus.OK);\r\n    }\r\n\r\n    @GetMapping(\"/detail/{id}\")\r\n    public ResponseEntity<User> getById(@PathVariable(\"id\") int id){\r\n        if(!userService.existById(id)){\r\n            return new ResponseEntity(new Message(\"Not exist\"), HttpStatus.NOT_FOUND);\r\n        }\r\n        User user = userService.getOneById(id);\r\n        return new ResponseEntity<User>(user, HttpStatus.OK);\r\n    }\r\n\r\n\r\n    @GetMapping(\"/detailname/{name}\")\r\n    public ResponseEntity<User> getByName(@PathVariable(\"name\") String name){\r\n        if(!userService.existByName(name)){\r\n            return new ResponseEntity(new Message(\"Not exist\"), HttpStatus.NOT_FOUND);\r\n        }\r\n        User user = userService.getOneByName(name);\r\n        return new ResponseEntity<User>(user, HttpStatus.OK);\r\n    }\r\n\r\n\r\n    @PostMapping(\"/create\")\r\n    public ResponseEntity<?> create(@RequestBody UserDto userDto){\r\n        if(StringUtils.isBlank(userDto.getName()))\r\n            return new ResponseEntity(new Message(\"Name is required\"),HttpStatus.BAD_REQUEST);\r\n        if(userService.findByIdentityNumb(userDto.getIdentityNumb()))\r\n            return new ResponseEntity(new Message(\"User exist in data base\"),HttpStatus.BAD_REQUEST);\r\n\r\n        User user = new User(userDto.getIdentityNumb(),userDto.getName(),userDto.getBirthday(),userDto.getIdCity(),userDto.isAdmin(),userDto.isActive());\r\n        try{\r\n            userService.save(user);\r\n            return new ResponseEntity(new Message(\"User saved\"), HttpStatus.OK);\r\n        }catch (Exception e){\r\n            return new ResponseEntity(new Message(\"Error\"+e), HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }\r\n\r\n    }\r\n\r\n    @PutMapping(\"/update/{id}\")\r\n    public ResponseEntity<?> update(@PathVariable(\"id\")int id, @RequestBody UserDto userDto){\r\n\r\n        if(!userService.existById(id))\r\n            return new ResponseEntity(new Message(\"not exist\"), HttpStatus.NOT_FOUND);\r\n        if(userService.existByName(userDto.getName()) && userService.getOneByName(userDto.getName()).getId() != id)\r\n            return new ResponseEntity(new Message(\"user exist in database\"), HttpStatus.BAD_REQUEST);\r\n        if(StringUtils.isBlank(userDto.getName()))\r\n            return new ResponseEntity(new Message(\"Name is required\"),HttpStatus.BAD_REQUEST);\r\n\r\n        User user = userService.getOneById(id);\r\n        user.setIdentityNumb(userDto.getIdentityNumb());\r\n        user.setName(userDto.getName());\r\n        user.setBirthday(userDto.getBirthday());\r\n        user.setIdCity(userDto.getIdCity());\r\n        user.setAdmin(userDto.isAdmin());\r\n        user.setActive(userDto.isActive());\r\n        try{\r\n            userService.save(user);\r\n            return new ResponseEntity(new Message(\"User saved\"), HttpStatus.OK);\r\n        }catch (Exception e){\r\n            return new ResponseEntity(new Message(\"Error\"+e), HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    @DeleteMapping(\"/delete/{id}\")\r\n    public ResponseEntity<?> delete(@PathVariable(\"id\")int id){\r\n        if(!userService.existById(id))\r\n            return new ResponseEntity(new Message(\"not exist\"), HttpStatus.NOT_FOUND);\r\n        User user = userService.getOneById(id);\r\n        user.setActive(false);\r\n        userService.save(user);\r\n        return new ResponseEntity(new Message(\"User deleted\"), HttpStatus.OK);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/edu/javeriana/users/controller/UserController.java b/src/main/java/edu/javeriana/users/controller/UserController.java
--- a/src/main/java/edu/javeriana/users/controller/UserController.java	(revision e1b9a35223319bbb860092d4f4774e6413158412)
+++ b/src/main/java/edu/javeriana/users/controller/UserController.java	(date 1681865118494)
@@ -1,7 +1,5 @@
 package edu.javeriana.users.controller;
 
-import edu.javeriana.users.dto.Message;
-import edu.javeriana.users.dto.UserDto;
 import edu.javeriana.users.entity.User;
 import edu.javeriana.users.service.UserService;
 import io.micrometer.common.util.StringUtils;
@@ -28,7 +26,7 @@
     public ResponseEntity<List<User>> list(){
         List<User> list = userService.list();
         if(list.isEmpty()){
-            return new ResponseEntity(new Message("No users registered in the system."), HttpStatus.OK);
+            return new ResponseEntity("No users registered in the system.", HttpStatus.OK);
         }
         return new ResponseEntity<>(list, HttpStatus.OK);
     }
@@ -36,7 +34,7 @@
     @GetMapping("/detail/{id}")
     public ResponseEntity<User> getById(@PathVariable("id") int id){
         if(!userService.existById(id)){
-            return new ResponseEntity(new Message("Not exist"), HttpStatus.NOT_FOUND);
+            return new ResponseEntity("Not exist", HttpStatus.NOT_FOUND);
         }
         User user = userService.getOneById(id);
         return new ResponseEntity<User>(user, HttpStatus.OK);
@@ -46,7 +44,7 @@
     @GetMapping("/detailname/{name}")
     public ResponseEntity<User> getByName(@PathVariable("name") String name){
         if(!userService.existByName(name)){
-            return new ResponseEntity(new Message("Not exist"), HttpStatus.NOT_FOUND);
+            return new ResponseEntity("Not exist", HttpStatus.NOT_FOUND);
         }
         User user = userService.getOneByName(name);
         return new ResponseEntity<User>(user, HttpStatus.OK);
@@ -54,44 +52,56 @@
 
 
     @PostMapping("/create")
-    public ResponseEntity<?> create(@RequestBody UserDto userDto){
-        if(StringUtils.isBlank(userDto.getName()))
-            return new ResponseEntity(new Message("Name is required"),HttpStatus.BAD_REQUEST);
-        if(userService.findByIdentityNumb(userDto.getIdentityNumb()))
-            return new ResponseEntity(new Message("User exist in data base"),HttpStatus.BAD_REQUEST);
+    public ResponseEntity<?> create(@RequestBody User user){
+        if(StringUtils.isBlank(user.getName()))
+            return new ResponseEntity("Name is required",HttpStatus.BAD_REQUEST);
+        if(userService.findByEmail(user.getEmail()))
+            return new ResponseEntity("User exist in data base",HttpStatus.BAD_REQUEST);
 
-        User user = new User(userDto.getIdentityNumb(),userDto.getName(),userDto.getBirthday(),userDto.getIdCity(),userDto.isAdmin(),userDto.isActive());
+        User temp = new User();
+        temp.setName(user.getName());
+        temp.setEmail(user.getEmail());
+        temp.setPassword(user.getPassword());
+        temp.setLogin(user.getLogin());
+        temp.setToken(user.getToken());
+        temp.setBirthdate(user.getBirthdate());
+        temp.setId_city(user.getId_city());
+        temp.setAdmin(user.isAdmin());
+        temp.setActive(user.isActive());
         try{
-            userService.save(user);
-            return new ResponseEntity(new Message("User saved"), HttpStatus.OK);
+            userService.save(temp);
+            return new ResponseEntity("User saved", HttpStatus.OK);
         }catch (Exception e){
-            return new ResponseEntity(new Message("Error"+e), HttpStatus.INTERNAL_SERVER_ERROR);
+            return new ResponseEntity("Error"+e, HttpStatus.INTERNAL_SERVER_ERROR);
         }
 
     }
 
     @PutMapping("/update/{id}")
-    public ResponseEntity<?> update(@PathVariable("id")int id, @RequestBody UserDto userDto){
+    public ResponseEntity<?> update(@PathVariable("id")int id, @RequestBody User user){
 
         if(!userService.existById(id))
-            return new ResponseEntity(new Message("not exist"), HttpStatus.NOT_FOUND);
-        if(userService.existByName(userDto.getName()) && userService.getOneByName(userDto.getName()).getId() != id)
-            return new ResponseEntity(new Message("user exist in database"), HttpStatus.BAD_REQUEST);
-        if(StringUtils.isBlank(userDto.getName()))
-            return new ResponseEntity(new Message("Name is required"),HttpStatus.BAD_REQUEST);
+            return new ResponseEntity("not exist", HttpStatus.NOT_FOUND);
+        if(userService.existByName(user.getName()) && userService.getOneByName(user.getName()).getId() != id)
+            return new ResponseEntity("user exist in database", HttpStatus.BAD_REQUEST);
+        if(StringUtils.isBlank(user.getName()))
+            return new ResponseEntity("Name is required",HttpStatus.BAD_REQUEST);
 
-        User user = userService.getOneById(id);
-        user.setIdentityNumb(userDto.getIdentityNumb());
-        user.setName(userDto.getName());
-        user.setBirthday(userDto.getBirthday());
-        user.setIdCity(userDto.getIdCity());
-        user.setAdmin(userDto.isAdmin());
-        user.setActive(userDto.isActive());
+        User temp = userService.getOneById(id);
+        temp.setName(user.getName());
+        temp.setEmail(user.getEmail());
+        temp.setPassword(user.getPassword());
+        temp.setLogin(user.getLogin());
+        temp.setToken(user.getToken());
+        temp.setBirthdate(user.getBirthdate());
+        temp.setId_city(user.getId_city());
+        temp.setAdmin(user.isAdmin());
+        temp.setActive(user.isActive());
         try{
-            userService.save(user);
-            return new ResponseEntity(new Message("User saved"), HttpStatus.OK);
+            userService.save(temp);
+            return new ResponseEntity("User saved", HttpStatus.OK);
         }catch (Exception e){
-            return new ResponseEntity(new Message("Error"+e), HttpStatus.INTERNAL_SERVER_ERROR);
+            return new ResponseEntity("Error"+e, HttpStatus.INTERNAL_SERVER_ERROR);
         }
 
     }
@@ -100,10 +110,10 @@
     @DeleteMapping("/delete/{id}")
     public ResponseEntity<?> delete(@PathVariable("id")int id){
         if(!userService.existById(id))
-            return new ResponseEntity(new Message("not exist"), HttpStatus.NOT_FOUND);
+            return new ResponseEntity("not exist", HttpStatus.NOT_FOUND);
         User user = userService.getOneById(id);
         user.setActive(false);
         userService.save(user);
-        return new ResponseEntity(new Message("User deleted"), HttpStatus.OK);
+        return new ResponseEntity("User deleted", HttpStatus.OK);
     }
 }
Index: src/main/java/edu/javeriana/users/repository/UserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.javeriana.users.repository;\r\n\r\nimport edu.javeriana.users.entity.User;\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\n\r\n@Repository\r\npublic interface UserRepository extends JpaRepository<User, Integer> {\r\n    User findByName(String name);\r\n\r\n    User findByIdentityNumb(int identityNumb);\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/edu/javeriana/users/repository/UserRepository.java b/src/main/java/edu/javeriana/users/repository/UserRepository.java
--- a/src/main/java/edu/javeriana/users/repository/UserRepository.java	(revision e1b9a35223319bbb860092d4f4774e6413158412)
+++ b/src/main/java/edu/javeriana/users/repository/UserRepository.java	(date 1681854049124)
@@ -8,6 +8,5 @@
 public interface UserRepository extends JpaRepository<User, Integer> {
     User findByName(String name);
 
-    User findByIdentityNumb(int identityNumb);
-
+    User findByEmail(String email);
 }
Index: src/main/java/edu/javeriana/users/entity/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.javeriana.users.entity;\r\n\r\nimport jakarta.persistence.*;\r\n\r\nimport java.util.Date;\r\n\r\n@Entity\r\n@Table(name = \"users\")\r\npublic class User {\r\n\r\n    public User() {\r\n    }\r\n\r\n    public User(int identityNumb, String name, Date birthday, int idCity, boolean admin, boolean active) {\r\n        this.identityNumb = identityNumb;\r\n        this.name = name;\r\n        this.birthday = birthday;\r\n        this.idCity = idCity;\r\n        this.admin = admin;\r\n        this.active = active;\r\n    }\r\n\r\n    @Id\r\n    @GeneratedValue(strategy= GenerationType.IDENTITY)\r\n    private int id;\r\n\r\n    @Column(name = \"identity_numb\")\r\n    private int identityNumb;\r\n\r\n    @Column(name = \"name\")\r\n    private String name;\r\n\r\n    @Column(name = \"birthday\")\r\n    private Date birthday;\r\n\r\n    @Column(name = \"id_city\")\r\n    private int idCity;\r\n\r\n    @Column(name = \"admin\")\r\n    private boolean admin;\r\n\r\n    @Column(name = \"active\")\r\n    private boolean active;\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public int getIdentityNumb() {\r\n        return identityNumb;\r\n    }\r\n\r\n    public void setIdentityNumb(int identityNumb) {\r\n        this.identityNumb = identityNumb;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public Date getBirthday() {\r\n        return birthday;\r\n    }\r\n\r\n    public void setBirthday(Date birthday) {\r\n        this.birthday = birthday;\r\n    }\r\n\r\n    public int getIdCity() {\r\n        return idCity;\r\n    }\r\n\r\n    public void setIdCity(int idCity) {\r\n        this.idCity = idCity;\r\n    }\r\n\r\n    public boolean isAdmin() {\r\n        return admin;\r\n    }\r\n\r\n    public void setAdmin(boolean admin) {\r\n        this.admin = admin;\r\n    }\r\n\r\n    public boolean isActive() {\r\n        return active;\r\n    }\r\n\r\n    public void setActive(boolean active) {\r\n        this.active = active;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/edu/javeriana/users/entity/User.java b/src/main/java/edu/javeriana/users/entity/User.java
--- a/src/main/java/edu/javeriana/users/entity/User.java	(revision e1b9a35223319bbb860092d4f4774e6413158412)
+++ b/src/main/java/edu/javeriana/users/entity/User.java	(date 1681866169025)
@@ -1,40 +1,54 @@
 package edu.javeriana.users.entity;
 
 import jakarta.persistence.*;
+import lombok.*;
 
 import java.util.Date;
 
+@Getter
+@Setter
+
+@NoArgsConstructor
 @Entity
 @Table(name = "users")
 public class User {
 
-    public User() {
-    }
-
-    public User(int identityNumb, String name, Date birthday, int idCity, boolean admin, boolean active) {
-        this.identityNumb = identityNumb;
+    public User(String name, String email, String password, String login, String token, Date birthdate, String id_city, boolean admin, boolean active) {
         this.name = name;
-        this.birthday = birthday;
-        this.idCity = idCity;
+        this.email = email;
+        this.password = password;
+        this.login = login;
+        this.token = token;
+        this.birthdate = birthdate;
+        this.id_city = id_city;
         this.admin = admin;
         this.active = active;
     }
 
     @Id
-    @GeneratedValue(strategy= GenerationType.IDENTITY)
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
     private int id;
 
-    @Column(name = "identity_numb")
-    private int identityNumb;
-
     @Column(name = "name")
     private String name;
 
-    @Column(name = "birthday")
-    private Date birthday;
+    @Column(name = "email")
+    private String email;
+
+    @Column(name = "password")
+    private String password;
+
+    @Column(name = "login")
+    private String login;
+
+    @Column(name = "token")
+    private String token;
+
+    @Column(name = "birthdate")
+    private Date birthdate;
 
     @Column(name = "id_city")
-    private int idCity;
+    private String id_city;
 
     @Column(name = "admin")
     private boolean admin;
@@ -42,59 +56,4 @@
     @Column(name = "active")
     private boolean active;
 
-    public int getId() {
-        return id;
-    }
-
-    public void setId(int id) {
-        this.id = id;
-    }
-
-    public int getIdentityNumb() {
-        return identityNumb;
-    }
-
-    public void setIdentityNumb(int identityNumb) {
-        this.identityNumb = identityNumb;
-    }
-
-    public String getName() {
-        return name;
-    }
-
-    public void setName(String name) {
-        this.name = name;
-    }
-
-    public Date getBirthday() {
-        return birthday;
-    }
-
-    public void setBirthday(Date birthday) {
-        this.birthday = birthday;
-    }
-
-    public int getIdCity() {
-        return idCity;
-    }
-
-    public void setIdCity(int idCity) {
-        this.idCity = idCity;
-    }
-
-    public boolean isAdmin() {
-        return admin;
-    }
-
-    public void setAdmin(boolean admin) {
-        this.admin = admin;
-    }
-
-    public boolean isActive() {
-        return active;
-    }
-
-    public void setActive(boolean active) {
-        this.active = active;
-    }
 }
Index: src/main/java/edu/javeriana/users/dto/Message.java
===================================================================
diff --git a/src/main/java/edu/javeriana/users/dto/Message.java b/src/main/java/edu/javeriana/users/dto/Message.java
deleted file mode 100644
--- a/src/main/java/edu/javeriana/users/dto/Message.java	(revision e1b9a35223319bbb860092d4f4774e6413158412)
+++ /dev/null	(revision e1b9a35223319bbb860092d4f4774e6413158412)
@@ -1,17 +0,0 @@
-package edu.javeriana.users.dto;
-
-public class Message {
-    private String message;
-
-    public Message(String message) {
-        this.message = message;
-    }
-
-    public String getMessage() {
-        return message;
-    }
-
-    public void setMessage(String message) {
-        this.message = message;
-    }
-}
Index: ../security/src/main/java/edu/javeriana/security/controller/UserRestController.java
===================================================================
diff --git a/../security/src/main/java/edu/javeriana/security/controller/UserRestController.java b/../security/src/main/java/edu/javeriana/security/controller/UserRestController.java
deleted file mode 100644
--- a/../security/src/main/java/edu/javeriana/security/controller/UserRestController.java	(revision e1b9a35223319bbb860092d4f4774e6413158412)
+++ /dev/null	(revision e1b9a35223319bbb860092d4f4774e6413158412)
@@ -1,54 +0,0 @@
-package com.example.Projecto.controller;
-
-import com.example.Projecto.entity.User;
-import io.jsonwebtoken.Jwts;
-import io.jsonwebtoken.SignatureAlgorithm;
-import org.springframework.security.core.GrantedAuthority;
-import org.springframework.security.core.authority.AuthorityUtils;
-import org.springframework.web.bind.annotation.PostMapping;
-import org.springframework.web.bind.annotation.RequestParam;
-import org.springframework.web.bind.annotation.RestController;
-
-import java.util.Date;
-import java.util.List;
-import java.util.stream.Collectors;
-
-@RestController
-public class UserRestController {
-
-    @PostMapping("/user")
-    public User login(@RequestParam("user") String username, @RequestParam("password") String  password){
-
-        String token = getJWTToken(username);
-        User user = new User();
-        user.setLogin(username);
-        user.setToken(token);
-
-        return user;
-
-    }
-
-    private String getJWTToken(String username){
-
-        String secretKey = "mySecretExS";
-
-        List<GrantedAuthority> grantedAuthorities = AuthorityUtils.commaSeparatedStringToAuthorityList("ROLE_USER");
-
-        String token  = Jwts
-                .builder()
-                .setId("ferreteriaJWT")
-                .setSubject(username)
-                .claim("authorities",
-                        grantedAuthorities.stream()
-                        .map(GrantedAuthority::getAuthority)
-                        .collect(Collectors.toList())
-                )
-                .setIssuedAt(new Date(System.currentTimeMillis()))
-                .setExpiration(new Date(System.currentTimeMillis() + 800000))
-                .signWith(SignatureAlgorithm.HS512,
-                        secretKey.getBytes())
-                .compact();
-
-        return "Bearer " + token;
-    }
-}
Index: ../security/src/main/java/edu/javeriana/security/entity/JWTAuthorizationFilter.java
===================================================================
diff --git a/../security/src/main/java/edu/javeriana/security/entity/JWTAuthorizationFilter.java b/../security/src/main/java/edu/javeriana/security/entity/JWTAuthorizationFilter.java
deleted file mode 100644
--- a/../security/src/main/java/edu/javeriana/security/entity/JWTAuthorizationFilter.java	(revision e1b9a35223319bbb860092d4f4774e6413158412)
+++ /dev/null	(revision e1b9a35223319bbb860092d4f4774e6413158412)
@@ -1,76 +0,0 @@
-package com.example.Projecto.security;
-
-import io.jsonwebtoken.*;
-import jakarta.servlet.FilterChain;
-import jakarta.servlet.ServletException;
-import jakarta.servlet.http.HttpServletRequest;
-import jakarta.servlet.http.HttpServletResponse;
-import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
-import org.springframework.security.core.authority.SimpleGrantedAuthority;
-import org.springframework.security.core.context.SecurityContextHolder;
-import org.springframework.web.filter.OncePerRequestFilter;
-
-import java.io.IOException;
-import java.util.List;
-import java.util.stream.Collectors;
-
-public class JWTAuthorizationFilter extends OncePerRequestFilter {
-
-    private final String HEADER = "Authorization";
-    private final String PREFIX = "Bearer";
-    private final String SECRET = "mySecretExS";
-
-    @Override
-    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain){
-
-        try{
-            if(checkJWTToken(request, response)){
-                Claims claims = validateToken(request);
-                if(claims.get("authorities") != null){
-                    setUpSpringAuthenticator(claims);
-                }else {
-                    SecurityContextHolder.clearContext();
-                }
-
-                chain.doFilter(request, response);
-
-            }
-        }catch (ExpiredJwtException | UnsupportedJwtException | MalformedJwtException e){
-            response.setStatus(HttpServletResponse.SC_FORBIDDEN);
-            try {
-                ((HttpServletResponse) response).sendError(HttpServletResponse.SC_FORBIDDEN, e.getMessage());
-            } catch (IOException ex) {
-                throw new RuntimeException(ex);
-            }
-            return;
-        } catch (ServletException e) {
-            throw new RuntimeException(e);
-        } catch (IOException e) {
-            throw new RuntimeException(e);
-        }
-    }
-
-    private Claims validateToken(HttpServletRequest request){
-        String jwtToken = request.getHeader(HEADER).replace(PREFIX, "");
-        return Jwts.parser().setSigningKey(SECRET.getBytes()).parseClaimsJws(jwtToken).getBody();
-    }
-
-    private void setUpSpringAuthenticator(Claims claims){
-        @SuppressWarnings("unchecked")
-        List<String> authorities = (List) claims.get("authorities");
-
-        UsernamePasswordAuthenticationToken auth = new UsernamePasswordAuthenticationToken(claims.getSubject(), authorities.stream().map(SimpleGrantedAuthority::new).collect(Collectors.toList()));
-
-        SecurityContextHolder.getContext().setAuthentication(auth);
-
-    }
-
-    private boolean checkJWTToken(HttpServletRequest request, HttpServletResponse response){
-        String authenticationHeader = request.getHeader(HEADER);
-        if (authenticationHeader == null || !authenticationHeader.startsWith(PREFIX)){
-            return false;
-        }
-        return true;
-    }
-
-}
Index: src/main/java/edu/javeriana/users/dto/UserDto.java
===================================================================
diff --git a/src/main/java/edu/javeriana/users/dto/UserDto.java b/src/main/java/edu/javeriana/users/dto/UserDto.java
deleted file mode 100644
--- a/src/main/java/edu/javeriana/users/dto/UserDto.java	(revision e1b9a35223319bbb860092d4f4774e6413158412)
+++ /dev/null	(revision e1b9a35223319bbb860092d4f4774e6413158412)
@@ -1,79 +0,0 @@
-package edu.javeriana.users.dto;
-
-import java.util.Date;
-
-public class UserDto {
-
-    private int identityNumb;
-
-    private String name;
-
-    private Date birthday;
-
-    private int idCity;
-
-    private boolean admin;
-
-
-    private boolean active;
-
-    public UserDto(){
-    }
-
-    public UserDto(int identityNumb, String name, Date birthday, int idCity, boolean admin, boolean active) {
-        this.identityNumb = identityNumb;
-        this.name = name;
-        this.birthday = birthday;
-        this.idCity = idCity;
-        this.admin = admin;
-        this.active = active;
-    }
-
-    public int getIdentityNumb() {
-        return identityNumb;
-    }
-
-    public void setIdentityNumb(int identityNumb) {
-        this.identityNumb = identityNumb;
-    }
-
-    public String getName() {
-        return name;
-    }
-
-    public void setName(String name) {
-        this.name = name;
-    }
-
-    public Date getBirthday() {
-        return birthday;
-    }
-
-    public void setBirthday(Date birthday) {
-        this.birthday = birthday;
-    }
-
-    public int getIdCity() {
-        return idCity;
-    }
-
-    public void setIdCity(int idCity) {
-        this.idCity = idCity;
-    }
-
-    public boolean isAdmin() {
-        return admin;
-    }
-
-    public void setAdmin(boolean admin) {
-        this.admin = admin;
-    }
-
-    public void setActive(boolean active) {
-        this.active = active;
-    }
-
-    public boolean isActive() {
-        return active;
-    }
-}
Index: ../security/src/main/java/edu/javeriana/security/entity/WebSecurityConfig.java
===================================================================
diff --git a/../security/src/main/java/edu/javeriana/security/entity/WebSecurityConfig.java b/../security/src/main/java/edu/javeriana/security/entity/WebSecurityConfig.java
deleted file mode 100644
--- a/../security/src/main/java/edu/javeriana/security/entity/WebSecurityConfig.java	(revision e1b9a35223319bbb860092d4f4774e6413158412)
+++ /dev/null	(revision e1b9a35223319bbb860092d4f4774e6413158412)
@@ -1,28 +0,0 @@
-package com.example.Projecto.security;
-
-import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
-import org.springframework.http.HttpMethod;
-import org.springframework.security.config.annotation.web.builders.HttpSecurity;
-import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
-import org.springframework.security.web.SecurityFilterChain;
-import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;
-
-@Configuration
-@EnableWebSecurity
-public class WebSecurityConfig {
-
-    @Bean
-    public SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception{
-
-        httpSecurity.cors().and().csrf().disable()
-                .addFilterAfter(new JWTAuthorizationFilter(), UsernamePasswordAuthenticationFilter.class)
-                .authorizeRequests()
-                //.antMatchers(HttpMethod.POST, "/user").permitAll()
-                //.antMatchers(HttpMethod.GET, "/books/searchAll").permitAll()
-                .anyRequest().authenticated();
-
-        return httpSecurity.build();
-
-    }
-}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"80a83589-6a08-45c9-8880-bca0fb1cee4e\" name=\"Changes\" comment=\"Autenticación\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2MwMJ5gzNwOrM2T4IS6EBgNB85C\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,\r\n    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,\r\n    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,\r\n    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/Universidad/2023-1/Desarrollo Web/Proyecto/brands&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;spring.configuration.checksum&quot;: &quot;9bc65c2abec141778ffaa729489f3e87&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Universidad\\2023-1\\Desarrollo Web\\Proyecto\\users\\src\\main\\java\\edu\\javeriana\\users\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.UsersApplication\">\r\n    <configuration name=\"UsersApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"edu.javeriana.users.UsersApplication\" />\r\n      <module name=\"users\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"edu.javeriana.users.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UsersApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"users\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"edu.javeriana.users.UsersApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.UsersApplication\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"80a83589-6a08-45c9-8880-bca0fb1cee4e\" name=\"Changes\" comment=\"\" />\r\n      <created>1678674118033</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1678674118033</updated>\r\n      <workItem from=\"1678760577347\" duration=\"841000\" />\r\n      <workItem from=\"1678848567736\" duration=\"2658000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Corrección de errores\">\r\n      <created>1678680474337</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1678680474337</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Correccion de eliminado de usuario\">\r\n      <created>1678728747718</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1678728747718</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Autenticación\">\r\n      <created>1678924710328</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1678924710328</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Autenticación\">\r\n      <created>1678924744141</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1678924744141</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Corrección de errores\" />\r\n    <MESSAGE value=\"Correccion de eliminado de usuario\" />\r\n    <MESSAGE value=\"Autenticación\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Autenticación\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision e1b9a35223319bbb860092d4f4774e6413158412)
+++ b/.idea/workspace.xml	(date 1681864624686)
@@ -4,7 +4,27 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="80a83589-6a08-45c9-8880-bca0fb1cee4e" name="Changes" comment="Autenticación" />
+    <list default="true" id="80a83589-6a08-45c9-8880-bca0fb1cee4e" name="Changes" comment="Autenticación">
+      <change beforePath="$PROJECT_DIR$/../brands/src/main/java/edu/javeriana/brands/controller/BrandController.java" beforeDir="false" afterPath="$PROJECT_DIR$/../brands/src/main/java/edu/javeriana/brands/controller/BrandController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../security/src/main/java/edu/javeriana/security/controller/UserRestController.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../security/src/main/java/edu/javeriana/security/entity/JWTAuthorizationFilter.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../security/src/main/java/edu/javeriana/security/entity/WebSecurityConfig.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tools/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../tools/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tools/target/classes/edu/javeriana/tools/ToolsApplication.class" beforeDir="false" afterPath="$PROJECT_DIR$/../tools/target/classes/edu/javeriana/tools/ToolsApplication.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tools/target/classes/edu/javeriana/tools/controller/ToolController.class" beforeDir="false" afterPath="$PROJECT_DIR$/../tools/target/classes/edu/javeriana/tools/controller/ToolController.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tools/target/classes/edu/javeriana/tools/entity/Tool.class" beforeDir="false" afterPath="$PROJECT_DIR$/../tools/target/classes/edu/javeriana/tools/entity/Tool.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tools/target/classes/edu/javeriana/tools/repository/ToolRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/../tools/target/classes/edu/javeriana/tools/repository/ToolRepository.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tools/target/classes/edu/javeriana/tools/service/ToolService.class" beforeDir="false" afterPath="$PROJECT_DIR$/../tools/target/classes/edu/javeriana/tools/service/ToolService.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/edu/javeriana/users/controller/UserController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/edu/javeriana/users/controller/UserController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/edu/javeriana/users/dto/Message.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/edu/javeriana/users/dto/UserDto.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/edu/javeriana/users/entity/User.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/edu/javeriana/users/entity/User.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/edu/javeriana/users/repository/UserRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/edu/javeriana/users/repository/UserRepository.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/edu/javeriana/users/service/UserService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/edu/javeriana/users/service/UserService.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -39,7 +59,7 @@
     &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
     &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;last_opened_file_path&quot;: &quot;D:/Universidad/2023-1/Desarrollo Web/Proyecto/brands&quot;,
+    &quot;last_opened_file_path&quot;: &quot;D:/Descargas/security&quot;,
     &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
     &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
     &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
Index: ../tools/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8e29fc7d-04d3-469c-8585-76d0202466de\" name=\"Changes\" comment=\"Primera entrega\">\r\n      <change beforePath=\"$PROJECT_DIR$/../users/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../users/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2MwSLIO40d7AzAKdmZcVmyix1M8\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RequestMappingsPanelOrder0\": \"0\",\r\n    \"RequestMappingsPanelOrder1\": \"1\",\r\n    \"RequestMappingsPanelWidth0\": \"75\",\r\n    \"RequestMappingsPanelWidth1\": \"75\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"last_opened_file_path\": \"D:/Universidad/2023-1/Desarrollo Web/Proyecto/users\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"settings.editor.selected.configurable\": \"project.propVCSSupport.DirectoryMappings\",\r\n    \"spring.configuration.checksum\": \"4a931512ce65bdc9ca6808adf92d8783\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Universidad\\2023-1\\Desarrollo Web\\Proyecto\\tools\\src\\main\\java\\edu\\javeriana\\tools\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.ToolsApplication\">\r\n    <configuration name=\"ToolsApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"edu.javeriana.tools.ToolsApplication\" />\r\n      <module name=\"tools\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"edu.javeriana.tools.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ToolsApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"tools\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"edu.javeriana.tools.ToolsApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.ToolsApplication\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8e29fc7d-04d3-469c-8585-76d0202466de\" name=\"Changes\" comment=\"\" />\r\n      <created>1678677094087</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1678677094087</updated>\r\n      <workItem from=\"1678760181583\" duration=\"1237000\" />\r\n      <workItem from=\"1678848554747\" duration=\"2831000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"añadidida propiedad puerto 8081 en ms tool\">\r\n      <created>1678760308947</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1678760308947</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Primera entrega\">\r\n      <created>1678920157700</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1678920157700</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"añadidida propiedad puerto 8081 en ms tool\" />\r\n    <MESSAGE value=\"Primera entrega\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Primera entrega\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/edu/javeriana/tools/controller/ToolController.java</url>\r\n          <line>61</line>\r\n          <option name=\"timeStamp\" value=\"2\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/edu/javeriana/tools/controller/ToolController.java</url>\r\n          <line>81</line>\r\n          <option name=\"timeStamp\" value=\"3\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tools/.idea/workspace.xml b/../tools/.idea/workspace.xml
--- a/../tools/.idea/workspace.xml	(revision e1b9a35223319bbb860092d4f4774e6413158412)
+++ b/../tools/.idea/workspace.xml	(date 1681864624543)
@@ -5,7 +5,19 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="8e29fc7d-04d3-469c-8585-76d0202466de" name="Changes" comment="Primera entrega">
+      <change beforePath="$PROJECT_DIR$/../brands/src/main/java/edu/javeriana/brands/controller/BrandController.java" beforeDir="false" afterPath="$PROJECT_DIR$/../brands/src/main/java/edu/javeriana/brands/controller/BrandController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../security/src/main/java/edu/javeriana/security/controller/UserRestController.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../security/src/main/java/edu/javeriana/security/entity/JWTAuthorizationFilter.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../security/src/main/java/edu/javeriana/security/entity/WebSecurityConfig.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../users/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../users/.idea/compiler.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/../users/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../users/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../users/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../users/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../users/src/main/java/edu/javeriana/users/controller/UserController.java" beforeDir="false" afterPath="$PROJECT_DIR$/../users/src/main/java/edu/javeriana/users/controller/UserController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../users/src/main/java/edu/javeriana/users/dto/Message.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../users/src/main/java/edu/javeriana/users/dto/UserDto.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../users/src/main/java/edu/javeriana/users/entity/User.java" beforeDir="false" afterPath="$PROJECT_DIR$/../users/src/main/java/edu/javeriana/users/entity/User.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../users/src/main/java/edu/javeriana/users/repository/UserRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/../users/src/main/java/edu/javeriana/users/repository/UserRepository.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../users/src/main/java/edu/javeriana/users/service/UserService.java" beforeDir="false" afterPath="$PROJECT_DIR$/../users/src/main/java/edu/javeriana/users/service/UserService.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -32,25 +44,25 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RequestMappingsPanelOrder0": "0",
-    "RequestMappingsPanelOrder1": "1",
-    "RequestMappingsPanelWidth0": "75",
-    "RequestMappingsPanelWidth1": "75",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "last_opened_file_path": "D:/Universidad/2023-1/Desarrollo Web/Proyecto/users",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "settings.editor.selected.configurable": "project.propVCSSupport.DirectoryMappings",
-    "spring.configuration.checksum": "4a931512ce65bdc9ca6808adf92d8783",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
+    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
+    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
+    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;last_opened_file_path&quot;: &quot;D:/Universidad/2023-1/Desarrollo Web/Proyecto/users&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;project.propVCSSupport.DirectoryMappings&quot;,
+    &quot;spring.configuration.checksum&quot;: &quot;4a931512ce65bdc9ca6808adf92d8783&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="D:\Universidad\2023-1\Desarrollo Web\Proyecto\tools\src\main\java\edu\javeriana\tools" />
@@ -135,12 +147,12 @@
       <breakpoints>
         <line-breakpoint enabled="true" type="java-line">
           <url>file://$PROJECT_DIR$/src/main/java/edu/javeriana/tools/controller/ToolController.java</url>
-          <line>61</line>
+          <line>59</line>
           <option name="timeStamp" value="2" />
         </line-breakpoint>
         <line-breakpoint enabled="true" type="java-line">
           <url>file://$PROJECT_DIR$/src/main/java/edu/javeriana/tools/controller/ToolController.java</url>
-          <line>81</line>
+          <line>79</line>
           <option name="timeStamp" value="3" />
         </line-breakpoint>
       </breakpoints>
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <module name=\"users\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n  </component>\r\n  <component name=\"JavacSettings\">\r\n    <option name=\"ADDITIONAL_OPTIONS_OVERRIDE\">\r\n      <module name=\"users\" options=\"-parameters\" />\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision e1b9a35223319bbb860092d4f4774e6413158412)
+++ b/.idea/compiler.xml	(date 1681854641453)
@@ -2,6 +2,7 @@
 <project version="4">
   <component name="CompilerConfiguration">
     <annotationProcessing>
+      <profile default="true" name="Default" enabled="true" />
       <profile name="Maven default annotation processors profile" enabled="true">
         <sourceOutputDir name="target/generated-sources/annotations" />
         <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>3.0.4</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>edu.javeriana</groupId>\r\n\t<artifactId>users</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>users</name>\r\n\t<description>Microservice for user</description>\r\n\t<properties>\r\n\t\t<java.version>17</java.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-devtools</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.mysql</groupId>\r\n\t\t\t<artifactId>mysql-connector-j</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.postgresql</groupId>\r\n\t\t\t<artifactId>postgresql</artifactId>\r\n\t\t\t<version>42.3.1</version>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.apache.commons</groupId>\r\n\t\t\t<artifactId>commons-lang3</artifactId>\r\n\t\t\t<version>3.5</version>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision e1b9a35223319bbb860092d4f4774e6413158412)
+++ b/pom.xml	(date 1681853683445)
@@ -55,6 +55,11 @@
 			<artifactId>commons-lang3</artifactId>
 			<version>3.5</version>
 		</dependency>
+		<dependency>
+			<groupId>org.projectlombok</groupId>
+			<artifactId>lombok</artifactId>
+			<optional>true</optional>
+		</dependency>
 	</dependencies>
 
 	<build>
Index: ../brands/src/main/java/edu/javeriana/brands/controller/BrandController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.javeriana.brands.controller;\r\n\r\nimport edu.javeriana.brands.service.BrandService;\r\nimport edu.javeriana.brands.entity.Brand;\r\nimport io.micrometer.common.util.StringUtils;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/Brand\")\r\npublic class BrandController {\r\n\r\n    @Autowired\r\n    private BrandService brandService;\r\n\r\n    @GetMapping(\"/\")\r\n    public String hola(){\r\n        return \"Hola\";\r\n    }\r\n\r\n    @GetMapping(\"/list\")\r\n    public ResponseEntity<List<Brand>> list(){\r\n        List<Brand> list = brandService.list();\r\n        return new ResponseEntity<>(list, HttpStatus.OK);\r\n    }\r\n\r\n    @GetMapping(\"/detail/{id}\")\r\n    public ResponseEntity<Brand> getById(@PathVariable(\"id\") int id){\r\n        if(!brandService.existById(id)){\r\n            return new ResponseEntity(\"Not exist\", HttpStatus.NOT_FOUND);\r\n        }\r\n        Brand brand = brandService.getOneById(id);\r\n        return new ResponseEntity<Brand>(brand, HttpStatus.OK);\r\n    }\r\n\r\n\r\n    @GetMapping(\"/detailname/{name}\")\r\n    public ResponseEntity<Brand> getByName(@PathVariable(\"name\") String name){\r\n\r\n        if(!brandService.existByName(name)){\r\n            return new ResponseEntity(\"Not exist\", HttpStatus.NOT_FOUND);\r\n        }\r\n        Brand Brand = brandService.getOneByName(name);\r\n        return new ResponseEntity<Brand>(Brand, HttpStatus.OK);\r\n    }\r\n\r\n\r\n    @PostMapping(\"/create\")\r\n    public ResponseEntity<?> create(@RequestBody Brand brand){\r\n        if(StringUtils.isBlank(brand.getName()))\r\n            return new ResponseEntity(\"Name is required\",HttpStatus.BAD_REQUEST);\r\n        if(brandService.existByName(brand.getName()))\r\n            return new ResponseEntity(\"Brand exist in data base\",HttpStatus.BAD_REQUEST);\r\n        Brand brandTmp = new Brand(brand.getName());\r\n        try{\r\n            brandService.save(brandTmp);\r\n            return new ResponseEntity(\"Brand saved\", HttpStatus.OK);\r\n        }catch (Exception e){\r\n            return new ResponseEntity(\"Error\"+e, HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }\r\n    }\r\n\r\n    @PutMapping(\"/update/{id}\")\r\n    public ResponseEntity<?> update(@PathVariable(\"id\")int id, @RequestBody Brand brand){\r\n        if(!brandService.existById(id))\r\n            return new ResponseEntity(\"not exist\", HttpStatus.NOT_FOUND);\r\n        if(brandService.existByName(brand.getName()) && brandService.getOneByName(brand.getName()).getId() != id)\r\n            return new ResponseEntity(\"Brand exist in data base\", HttpStatus.BAD_REQUEST);\r\n        if(StringUtils.isBlank(brand.getName()))\r\n            return new ResponseEntity(\"Name is required\",HttpStatus.BAD_REQUEST);\r\n\r\n        Brand brandTmp = brandService.getOneById(id);\r\n        brandTmp.setName(brand.getName());;\r\n        try{\r\n            brandService.save(brandTmp);\r\n            return new ResponseEntity(\"Brand saved\", HttpStatus.OK);\r\n        }catch (Exception e){\r\n            return new ResponseEntity(\"Error\"+e, HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }\r\n    }\r\n\r\n\r\n    @DeleteMapping(\"/delete/{id}\")\r\n    public ResponseEntity<?> delete(@PathVariable(\"id\")int id){\r\n        if(!brandService.existById(id))\r\n            return new ResponseEntity(\"not exist\", HttpStatus.NOT_FOUND);\r\n        try{\r\n            brandService.delete(id);\r\n            return new ResponseEntity(\"Brand deleted\", HttpStatus.OK);\r\n        }catch (Exception e){\r\n            return new ResponseEntity(\"Error\"+e, HttpStatus.INTERNAL_SERVER_ERROR);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../brands/src/main/java/edu/javeriana/brands/controller/BrandController.java b/../brands/src/main/java/edu/javeriana/brands/controller/BrandController.java
--- a/../brands/src/main/java/edu/javeriana/brands/controller/BrandController.java	(revision e1b9a35223319bbb860092d4f4774e6413158412)
+++ b/../brands/src/main/java/edu/javeriana/brands/controller/BrandController.java	(date 1681853379458)
@@ -11,7 +11,7 @@
 import java.util.List;
 
 @RestController
-@RequestMapping("/Brand")
+@RequestMapping("/brand")
 public class BrandController {
 
     @Autowired
